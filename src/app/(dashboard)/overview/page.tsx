"use client";
import AddModal from "@/components/molecules/Modals/AddModal/AddModal";
import Modal from "@/components/molecules/Modals/ModalBackground";
import UsersTables from "@/components/tables/UsersTables";
import useStudents from "@/hooks/useStudents";
import { Button, Input } from "@chakra-ui/react";
import { useQueryClient } from "@tanstack/react-query";
import { PlusIcon } from "lucide-react";

import React, { useRef, useState } from "react";

const Page = () => {
  const typeRef = useRef<"add" | "update">("add");
  const [open, setOpen] = useState(false);
 
  return (
    <div className="">
      <div className="mb-4 flex flex-col lg:flex-row items-center justify-between">
        <div className="flex items-center gap-x-2.5">
          <svg
            width="32"
            height="33"
            viewBox="0 0 32 33"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M20.5473 23.1375C21.47 22.234 22.1027 21.0762 22.3647 19.8116C22.6266 18.547 22.5059 17.2331 22.018 16.0374C21.5301 14.8417 20.6971 13.8184 19.6252 13.0981C18.5533 12.3778 17.2912 11.9932 15.9998 11.9932C14.7084 11.9932 13.4462 12.3778 12.3743 13.0981C11.3025 13.8184 10.4694 14.8417 9.98154 16.0374C9.49363 17.2331 9.37296 18.547 9.6349 19.8116C9.89685 21.0762 10.5295 22.234 11.4523 23.1375C9.88997 23.968 8.59105 25.2189 7.70228 26.7488C7.51195 27.0927 7.46423 27.4976 7.56939 27.8764C7.67455 28.2551 7.92418 28.5775 8.26459 28.7741C8.60499 28.9706 9.00896 29.0257 9.38957 28.9275C9.77019 28.8293 10.097 28.5855 10.2998 28.2488C10.8859 27.2585 11.7199 26.4379 12.7196 25.8679C13.7193 25.2979 14.8503 24.9982 16.001 24.9982C17.1518 24.9982 18.2827 25.2979 19.2825 25.8679C20.2822 26.4379 21.1161 27.2585 21.7023 28.2488C21.7988 28.4232 21.9291 28.5765 22.0855 28.7C22.2419 28.8234 22.4214 28.9145 22.6134 28.9678C22.8054 29.0211 23.0062 29.0356 23.2039 29.0105C23.4016 28.9854 23.5923 28.9211 23.7648 28.8214C23.9374 28.7218 24.0884 28.5887 24.209 28.4301C24.3296 28.2714 24.4173 28.0903 24.4671 27.8973C24.5169 27.7044 24.5278 27.5034 24.499 27.3062C24.4703 27.109 24.4026 26.9195 24.2998 26.7488C23.4103 25.2185 22.1105 23.9676 20.5473 23.1375ZM12.4998 18.5C12.4998 17.8078 12.7051 17.1311 13.0896 16.5555C13.4742 15.98 14.0208 15.5314 14.6604 15.2665C15.2999 15.0016 16.0037 14.9322 16.6826 15.0673C17.3615 15.2023 17.9852 15.5357 18.4747 16.0252C18.9641 16.5146 19.2975 17.1383 19.4325 17.8172C19.5676 18.4962 19.4983 19.1999 19.2334 19.8394C18.9685 20.479 18.5199 21.0256 17.9443 21.4102C17.3687 21.7948 16.692 22 15.9998 22C15.0715 22 14.1813 21.6313 13.5249 20.9749C12.8685 20.3185 12.4998 19.4283 12.4998 18.5ZM30.901 19.6988C30.7435 19.8172 30.5641 19.9035 30.3732 19.9526C30.1823 20.0017 29.9836 20.0126 29.7885 19.9849C29.5933 19.9572 29.4056 19.8912 29.2359 19.7909C29.0663 19.6905 28.9181 19.5577 28.7998 19.4C27.7585 18.0138 26.3185 16.9513 25.1335 16.695C24.8184 16.6269 24.5337 16.459 24.3215 16.2164C24.1092 15.9737 23.9809 15.6691 23.9553 15.3477C23.9298 15.0264 24.0085 14.7053 24.1797 14.4322C24.351 14.159 24.6056 13.9483 24.906 13.8313C25.28 13.6853 25.6133 13.4514 25.8778 13.1493C26.1423 12.8473 26.3301 12.486 26.4255 12.096C26.5208 11.706 26.5208 11.2988 26.4255 10.9088C26.3301 10.5188 26.1423 10.1576 25.8778 9.85551C25.6133 9.55347 25.28 9.31956 24.906 9.17357C24.532 9.02759 24.1284 8.97381 23.7292 9.0168C23.3301 9.0598 22.9471 9.19829 22.6128 9.42056C22.2785 9.64283 22.0026 9.94235 21.8085 10.2938C21.7165 10.4719 21.5897 10.6297 21.4356 10.758C21.2815 10.8862 21.1033 10.9823 20.9115 11.0405C20.7196 11.0987 20.5181 11.1178 20.3187 11.0968C20.1193 11.0758 19.9262 11.015 19.7507 10.9181C19.5752 10.8211 19.421 10.69 19.297 10.5325C19.1731 10.3749 19.082 10.1941 19.0291 10.0007C18.9762 9.80733 18.9627 9.60532 18.9892 9.40661C19.0157 9.2079 19.0818 9.01652 19.1835 8.84379C19.5547 8.18747 20.0569 7.61448 20.6588 7.16042C21.2608 6.70635 21.9496 6.3809 22.6827 6.20428C23.4157 6.02767 24.1772 6.00366 24.9199 6.13375C25.6626 6.26384 26.3706 6.54524 27 6.96049C27.6293 7.37574 28.1666 7.91596 28.5783 8.54759C28.9901 9.17922 29.2676 9.88877 29.3936 10.6322C29.5196 11.3756 29.4914 12.1369 29.3108 12.869C29.1301 13.601 28.8009 14.2881 28.3435 14.8875C29.4441 15.6207 30.4103 16.5378 31.1998 17.5988C31.4386 17.9169 31.5413 18.3168 31.4853 18.7107C31.4293 19.1045 31.2191 19.4599 30.901 19.6988ZM6.86603 16.6988C5.68103 16.955 4.24103 18.0175 3.19978 19.405C2.96026 19.7231 2.60418 19.933 2.20989 19.9886C1.81559 20.0442 1.41538 19.9408 1.09728 19.7013C0.779188 19.4618 0.569273 19.1057 0.513715 18.7114C0.458158 18.3171 0.561509 17.9169 0.801032 17.5988C1.59083 16.5381 2.55696 15.6211 3.65728 14.8875C3.19991 14.2881 2.87068 13.601 2.69003 12.869C2.50938 12.1369 2.48119 11.3756 2.60719 10.6322C2.73319 9.88877 3.0107 9.17922 3.42247 8.54759C3.83425 7.91596 4.37151 7.37574 5.00086 6.96049C5.63022 6.54524 6.33823 6.26384 7.08092 6.13375C7.82362 6.00366 8.58513 6.02767 9.31815 6.20428C10.0512 6.3809 10.7401 6.70635 11.342 7.16042C11.944 7.61448 12.4461 8.18747 12.8173 8.84379C12.919 9.01652 12.9851 9.2079 13.0116 9.40661C13.0382 9.60532 13.0246 9.80733 12.9717 10.0007C12.9188 10.1941 12.8277 10.3749 12.7038 10.5325C12.5799 10.69 12.4256 10.8211 12.2501 10.9181C12.0746 11.015 11.8815 11.0758 11.6821 11.0968C11.4828 11.1178 11.2812 11.0987 11.0894 11.0405C10.8975 10.9823 10.7193 10.8862 10.5652 10.758C10.4111 10.6297 10.2843 10.4719 10.1923 10.2938C9.99819 9.94235 9.72231 9.64283 9.38799 9.42056C9.05367 9.19829 8.67073 9.0598 8.27157 9.0168C7.87241 8.97381 7.46877 9.02759 7.09478 9.17357C6.7208 9.31956 6.38747 9.55347 6.123 9.85551C5.85852 10.1576 5.67068 10.5188 5.57536 10.9088C5.48003 11.2988 5.48003 11.706 5.57535 12.096C5.67068 12.486 5.85852 12.8473 6.123 13.1493C6.38747 13.4514 6.7208 13.6853 7.09478 13.8313C7.39516 13.9483 7.64985 14.159 7.82109 14.4322C7.99233 14.7053 8.07101 15.0264 8.04548 15.3477C8.01995 15.6691 7.89156 15.9737 7.67935 16.2164C7.46713 16.459 7.18238 16.6269 6.86728 16.695L6.86603 16.6988Z"
              fill="#F75555"
            />
          </svg>

          <span className="text-[20px] font-bold">Users</span>
        </div>
      </div>
      <div className="flex lg:flex-row flex-col items-center gap-y-4 justify-between gap-x-2.5">
        <span className="w-full lg:w-96">
        <Input
          className="transition3 focus:border-gray-500 mx-auto  h-10 rounded-lg bg-lightgray  lg:w-72"
          placeholder="Search anything..."
          bgColor={"#EDEDED"}
          type="search"
        />
        </span>
      
        <Button
          onClick={() => {
            setOpen(true);
            typeRef.current = "add";
          }}
          leftIcon={ <PlusIcon size={20} color="white"/>}
          className="flex items-center  "
          colorScheme="red"
        >
         
          Add Student
        </Button>
      </div>
      <UsersTables />
      <Modal open={open} setOpen={() => setOpen(false)}>
        <AddModal type={typeRef.current} setOpen={() => setOpen(false)} />
      </Modal>
    </div>
  );
};

export default Page;
